# Deployment and Service for models service

# modelsservice Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: modelsservice
  namespace: demaf
  labels:
    app.kubernetes.io/name: modelsservice
    app.kubernetes.io/version: v3.0.0
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: demaf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: modelsservice
  template:
    metadata:
      name: modelsservice
      labels:
        app.kubernetes.io/name: modelsservice
        app.kubernetes.io/instance: modelsservice-pod
        app.kubernetes.io/version: v3.0.0
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: demaf
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - k8s-cluster3-5
      initContainers:
        # Init container waiting for the dependencies to be available before starting the main container
        - name: depends-on
          image: busybox:1.37
          imagePullPolicy: IfNotPresent
          command:
            [
              "sh",
              "-c",
              "until nc -z modelsdatabase 27017 && nc -z rabbitmq 5672; do echo 'waiting for dependencies'; sleep 5; done;",
            ]
      containers:
        - name: modelsservice
          image: ghcr.io/ust-demaf/models-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: demaf
              mountPath: /usr/share
          env:
            - name: SPRING_DATA_MONGODB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: modelsdb_username
            - name: SPRING_DATA_MONGODB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: modelsdb_password
            - name: SPRING_DATA_MONGODB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: modelsdb_database
            - name: SPRING_DATA_MONGODB_HOST
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: modelsdb_host
            - name: SPRING_DATA_MONGODB_PORT
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: modelsdb_port
            - name: TADM_OUTPUT_DIRECTORY
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: modelsservice_tadm_output_directory
            - name: LOGGING_LEVEL_ROOT
              value: DEBUG
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK
              value: DEBUG
            - name: LOGGING_LEVEL_
              value: DEBUG
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 15
      hostname: modelsservice
      restartPolicy: Always
      volumes:
        - name: demaf
          persistentVolumeClaim:
            claimName: demaf-pvc
---
# modelsservice Service
apiVersion: v1
kind: Service
metadata:
  name: modelsservice
  namespace: demaf
spec:
  selector:
    app: modelsservice
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081