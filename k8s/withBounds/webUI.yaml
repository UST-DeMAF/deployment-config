# Deployment, Service and Ingress definitions for the web UI

# web-ui Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-ui
  namespace: demaf
  labels:
    app.kubernetes.io/name: web-ui
    app.kubernetes.io/version: v3.0.0
    app.kubernetes.io/component: node-nginx
    app.kubernetes.io/part-of: demaf
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: web-ui
  template:
    metadata:
      name: web-ui
      labels:
        app.kubernetes.io/name: web-ui
        app.kubernetes.io/instance: web-ui-pod
        app.kubernetes.io/version: v3.0.0
        app.kubernetes.io/component: node-nginx
        app.kubernetes.io/part-of: demaf
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - k8s-cluster3-5
      initContainers:
        # Init container waiting for the dependencies to be available before starting the main container
        - name: depends-on
          image: busybox:1.37
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 10m
              memory: 5Mi
            limits:
              cpu: 50m
              memory: 10Mi
          command:
            [
              "sh",
              "-c",
              "until nc -z analysismanager 8080 && nc -z rabbitmq 5672 && nc -z winery 80; do echo 'waiting for dependencies'; sleep 5; done;",
            ]
      containers:
        - name: web-ui
          image: ghcr.io/ust-demaf/web-ui:testing
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1
              memory: 1Gi
          ports:
            - containerPort: 80
          volumeMounts:
            - name: demaf
              mountPath: /usr/share
          env:
            - name: DEMAF_ANALYSIS_MANAGER_URL
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: analysismanager_url
            - name: DEMAF_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: webui_domain
            - name: DEMAF_HTTPS
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: webui_https
            - name: DEMAF_WINERY_URL
              valueFrom:
                configMapKeyRef:
                  name: demaf-config
                  key: winery_url
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 15
      hostname: web-ui
      restartPolicy: Always
      volumes:
        - name: demaf
          persistentVolumeClaim:
            claimName: demaf-pvc
---
# web-ui Service
apiVersion: v1
kind: Service
metadata:
  name: web-ui
  namespace: demaf
spec:
  selector:
    app.kubernetes.io/name: web-ui
  ports:
    - name: frontend
      protocol: TCP
      port: 80
      targetPort: 80